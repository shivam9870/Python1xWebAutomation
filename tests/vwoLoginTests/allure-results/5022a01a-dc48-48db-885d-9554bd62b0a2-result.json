{"name": "test_vwoLogin", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"//input[@id='login-username']\"]\"}\n  (Session info: chrome=124.0.6367.208); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF65C661522+60802]\n\t(No symbol) [0x00007FF65C5DAC22]\n\t(No symbol) [0x00007FF65C497CE4]\n\t(No symbol) [0x00007FF65C4E6D4D]\n\t(No symbol) [0x00007FF65C4E6E1C]\n\t(No symbol) [0x00007FF65C52CE37]\n\t(No symbol) [0x00007FF65C50ABBF]\n\t(No symbol) [0x00007FF65C52A224]\n\t(No symbol) [0x00007FF65C50A923]\n\t(No symbol) [0x00007FF65C4D8FEC]\n\t(No symbol) [0x00007FF65C4D9C21]\n\tGetHandleVerifier [0x00007FF65C9641BD+3217949]\n\tGetHandleVerifier [0x00007FF65C9A6157+3488183]\n\tGetHandleVerifier [0x00007FF65C99F0DF+3459391]\n\tGetHandleVerifier [0x00007FF65C71B8E6+823622]\n\t(No symbol) [0x00007FF65C5E5FBF]\n\t(No symbol) [0x00007FF65C5E0EE4]\n\t(No symbol) [0x00007FF65C5E1072]\n\t(No symbol) [0x00007FF65C5D18C4]\n\tBaseThreadInitThunk [0x00007FFEAB007344+20]\n\tRtlUserThreadStart [0x00007FFEABC626B1+33]", "trace": "setup1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"60950f03cda3e66c4d5d4d062b12bb33\")>\n\n    @allure.epic(\"VWO Login Test\")\n    @allure.feature(\"TC#1 - VWO App Positive Testcase\")\n    def test_vwoLogin(setup1):\n        driver = setup1\n        loginpage = LoginPage(driver)\n    \n        # Wait for the username input field to be visible\n        WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, \"//input[@id='login-username']\")))\n    \n>       loginpage.login_to_vwo(user=\"relaxeddirac4@justzeus.com\", pwd=\"ATBx@1234\")\n\ntest_vwologin.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pageObjects\\loginpage.py:37: in login_to_vwo\n    self.get_username().send_keys(user)\n..\\pageObjects\\loginpage.py:23: in get_username\n    return self.driver.find_element(*LoginPage.username)\n..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DDA4303090>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF65C5D18C4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEAB007344+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFEABC626B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[id=\"//input[@id='login-username']\"]\"}\nE         (Session info: chrome=124.0.6367.208); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF65C661522+60802]\nE       \t(No symbol) [0x00007FF65C5DAC22]\nE       \t(No symbol) [0x00007FF65C497CE4]\nE       \t(No symbol) [0x00007FF65C4E6D4D]\nE       \t(No symbol) [0x00007FF65C4E6E1C]\nE       \t(No symbol) [0x00007FF65C52CE37]\nE       \t(No symbol) [0x00007FF65C50ABBF]\nE       \t(No symbol) [0x00007FF65C52A224]\nE       \t(No symbol) [0x00007FF65C50A923]\nE       \t(No symbol) [0x00007FF65C4D8FEC]\nE       \t(No symbol) [0x00007FF65C4D9C21]\nE       \tGetHandleVerifier [0x00007FF65C9641BD+3217949]\nE       \tGetHandleVerifier [0x00007FF65C9A6157+3488183]\nE       \tGetHandleVerifier [0x00007FF65C99F0DF+3459391]\nE       \tGetHandleVerifier [0x00007FF65C71B8E6+823622]\nE       \t(No symbol) [0x00007FF65C5E5FBF]\nE       \t(No symbol) [0x00007FF65C5E0EE4]\nE       \t(No symbol) [0x00007FF65C5E1072]\nE       \t(No symbol) [0x00007FF65C5D18C4]\nE       \tBaseThreadInitThunk [0x00007FFEAB007344+20]\nE       \tRtlUserThreadStart [0x00007FFEABC626B1+33]\n\n..\\..\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1716289926363, "stop": 1716289926401, "uuid": "c62600fd-5d7b-488d-af07-28a2ee4b3e08", "historyId": "4c2b5b4b8bc6a8497b9fa20f543a9aa5", "testCaseId": "4c2b5b4b8bc6a8497b9fa20f543a9aa5", "fullName": "tests.vwoLoginTests.test_vwologin#test_vwoLogin", "labels": [{"name": "feature", "value": "TC#1 - VWO App Positive Testcase"}, {"name": "epic", "value": "VWO Login Test"}, {"name": "parentSuite", "value": "tests.vwoLoginTests"}, {"name": "suite", "value": "test_vwologin"}, {"name": "host", "value": "DESKTOP-FPPQ7JL"}, {"name": "thread", "value": "14840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.vwoLoginTests.test_vwologin"}]}